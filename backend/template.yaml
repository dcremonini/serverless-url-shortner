AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  url-shortner

Parameters:
  Stage:
    Type: String
    Default: 'dev'

Globals:
  Function:
    Timeout: 10
  Api:
    OpenApiVersion: 3.0.1

Resources:
  DynamodbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1 
      TableName: !Sub "url-shortner-${Stage}"
      Tags:
        - Key: stage
          Value: 
            Ref: Stage

  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      EndpointConfiguration: 'REGIONAL'
      Models:
        GenerateUrlModel:
          type: object
          required:
            - url
          properties:
            url:
              type: string
      Cors:
        AllowMethods: "'OPTIONS,POST,GET'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"

  GenerateShortUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/generate_url/
      Handler: app.index
      Runtime: python3.8
      Environment:
        Variables:
          DYNAMODB_TABLE:
            Ref: DynamodbTable
      Policies:
        - DynamoDBWritePolicy:
            TableName:
              Ref: DynamodbTable
      Events:
        GenerateShourtUrlApi:
          Type: Api
          Properties:
            Path: /generate
            Method: post
            RequestModel:
              Model: GenerateUrlModel
              Required: true              
            RestApiId:
              Ref: ApiGatewayApi

  ListShortUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/list_urls/
      Handler: app.index
      Runtime: python3.8
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: DynamodbTable
      Environment:
        Variables:
          DYNAMODB_TABLE:
            Ref: DynamodbTable
      Events:
        GenerateShourtUrlApi:
          Type: Api
          Properties:
            Path: /urls
            Method: get
            RestApiId:
              Ref: ApiGatewayApi

  FindShortUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/find_url/
      Handler: app.index
      Runtime: python3.8
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: DynamodbTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt FindUrlSuccessNotification.TopicName
      Environment:
        Variables:
          DYNAMODB_TABLE:
            Ref: DynamodbTable
          SNS_TOPIC:
            Ref: FindUrlSuccessNotification
      Events:
        FindShortUrlApi:
          Type: Api
          Properties:
            Path: /s/{code}
            Method: get
            RestApiId:
              Ref: ApiGatewayApi

  FindUrlSuccessNotification:
    Type: AWS::SNS::Topic

  UpdateStatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/update_stats/
      Handler: app.index
      Runtime: python3.8
      Policies:
        - DynamoDBWritePolicy:
            TableName:
              Ref: DynamodbTable
      Environment:
        Variables:
          DYNAMODB_TABLE:
            Ref: DynamodbTable
      Events:
        SnsNotifiaction:
          Type: SNS
          Properties:
            Topic:
              Ref: FindUrlSuccessNotification

  UpdateCounterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/update_counter/
      Handler: app.index
      Runtime: python3.8
      Policies:
        - DynamoDBWritePolicy:
            TableName:
              Ref: DynamodbTable
      Environment:
        Variables:
          DYNAMODB_TABLE:
            Ref: DynamodbTable
      Events:
        SnsNotifiaction:
          Type: SNS
          Properties:
            Topic:
              Ref: FindUrlSuccessNotification

  ListStatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/list_stats/
      Handler: app.index
      Runtime: python3.8
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: DynamodbTable
      Environment:
        Variables:
          DYNAMODB_TABLE:
            Ref: DynamodbTable
      Events:
        GenerateShourtUrlApi:
          Type: Api
          Properties:
            Path: /stats/{code}
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
  
  FrontendWebSiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html

  FrontendWebSiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: FrontendWebSiteBucketPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref FrontendWebSiteBucket
                - /*
      Bucket: !Ref FrontendWebSiteBucket

Outputs:
  ApiGatewayBaseUrl:
    Description: "API Gateway base url"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
  DynamoDBTableName:
    Description: "Dynamodb Table Name"
    Value: !Ref DynamodbTable
  FindUrlSuccessSNS:
    Description: "Find Url success SNS"
    Value: !Ref FindUrlSuccessNotification
  FindUrlSuccessSNSTopicName:
    Description: "Find Url success SNS topic name"
    Value: !GetAtt FindUrlSuccessNotification.TopicName
  FrontendWebSiteBucket:
    Value: !Ref FrontendWebSiteBucket
    Description: Website hosted bucket name
  PublicWebSiteURL:
    Value: !GetAtt FrontendWebSiteBucket.WebsiteURL
    Description: URL for website hosted on S3
  